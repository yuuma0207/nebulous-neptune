---
import type { Post } from '../../types/post.ts';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
    const matches = import.meta.glob<Post>("../posts/*.md", { eager: true });
    const allPosts = Object.values(matches) as Post[];

    const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts }
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
    <p>{tag}のタグが付いた記事</p>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title} description={post.frontmatter.description}></BlogPost>)}
</BaseLayout>